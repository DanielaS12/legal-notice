name: Build CD Images

on:
  push:
    branches:
      - master
      - "release-[0-9]+.[0-9]+.x"

jobs:
  publish_images:
    env:
      ORG_GRADLE_PROJECT_artifactory_user: ${{secrets.ARTIFACTORY_USER}}
      ORG_GRADLE_PROJECT_artifactory_password: ${{secrets.ARTIFACTORY_PASSWORD}}
      ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
    runs-on: ubuntu-latest
    steps:
      - name: Fix up git URLs
        run: echo -e '[url "https://github.com/"]\n  insteadOf = "git://github.com/"' >> ~/.gitconfig

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Fetch full history
        run: git fetch --prune --tags --unshallow

      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.16.3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v1

      - name: Generate Variables
        id: variables
        uses: armory-io/astrolabe-build-defaults@main
        with:
          red_hat_pid: ${{ secrets.REDHAT_PID }}

      - name: NPM Auth
        run: |
          echo 'registry=https://armory.jfrog.io/artifactory/api/npm/npm-all/' > ~/.npmrc
          curl -u${ARTIFACTORY_USER}:${ARTIFACTORY_PASSWORD} https://armory.jfrog.io/artifactory/api/npm/auth >> ~/.npmrc

      - name: Build
        run: |
          yarn --registry https://armory.jfrog.io/artifactory/api/npm/npm-all/ --frozen-lockfile
          yarn test
          yarn build --deck-version ${{ steps.variables.outputs.version }}

      - name: Build Image
        run: |
          docker build -t ${{ steps.variables.outputs.artifactory_image_name }} .

      - name: Publish Image To Artifactory
        run: |
          jfrog rt config artifactory --interactive=false \
            --url ${{ steps.variables.outputs.artifactory_url }} \
            --user ${ARTIFACTORY_USER} \
            --password ${ARTIFACTORY_PASSWORD}
          jfrog rt dp ${{ steps.variables.outputs.artifactory_image_name }} ${{ steps.variables.outputs.artifactory_docker_repository }} \
            --build-name=${{ steps.variables.outputs.build_name }} \
            --build-number=${{ steps.variables.outputs.build_number }}
          jfrog rt bag ${{ steps.variables.outputs.build_name }} ${{ steps.variables.outputs.build_number }}
          jfrog rt bp ${{ steps.variables.outputs.build_name }} ${{ steps.variables.outputs.build_number }} \
            --build-url=${{ steps.variables.outputs.build_url }}

      - name: Scan Using Aquasec
        uses: armory-io/aquasec-scan-action@v0.0.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          username: ${{ secrets.AQUA_USER }}
          password: ${{ secrets.AQUA_PASSWORD }}
          url: https://aquasec.armory.io
          registry: Artifactory
          image: ${{ steps.variables.outputs.image_name }}

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p '${{ secrets.DOCKER_HUB_PASS }}'

      - name: Publish Image to Docker Hub
        run: |
          docker image tag ${{ steps.variables.outputs.artifactory_image_name }} ${{ steps.variables.outputs.image_name }}
          docker push ${{ steps.variables.outputs.image_name }}
